<div id="wrapper">

<h1>New article</h1>
 <br>
 <%= notice%>
 <%= alert%>
<%= render 'form' %>
<button id="clickme" onclick="clickme();">Click Me Instead</button>
 
<%= link_to 'Back', articles_path %>

<% if user_signed_in? %>
  <%= link_to 'Sign Out', destroy_user_session_path, method: :delete %>
  <%= link_to current_user.email, edit_user_registration_path %>
<% else %>
  <%= link_to 'Sign In', new_user_session_path %>
  <%= link_to 'Sign Up', new_user_registration_path %>
<% end %>
<img id=imageid src=>
</div>
    <div style="">
        <canvas id="myCvs" width="400" height="400"></canvas>
        <img id="myImg" src="" alt="image from canvas" />
    </div>
        <!-- <img id="appendiv" src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/pie.png" alt="image from canvas" /> -->
        <!-- <img id="appendiv" src="http://demo.jobsito.com/clip/3269?file_name=data" alt="image from canvas" /> -->

<script>

      function getURL(url = "http://demo.jobsito.com/clip/3269?file_name=data"){
    // function getURL(url = "https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/pie.png") {
        return new Promise((resolve, reject) => {
            var img = new Image,
                //an image that has the proper CORS response header
                src = url,
                cvs = document.getElementById('myCvs'),
                ctx = cvs.getContext('2d');
            img.src = src;


            img.crossOrigin = "Anonymous";

            var dataURL;
            img.onload = function () {
                ctx.drawImage(img, 100, 100);
                var imgTag = document.getElementById('myImg');
                dataURL = cvs.toDataURL();
                imgTag.src = dataURL;
                console.log(dataURL);
                resolve(dataURL);
            }

            img.onerror = reject;

        })
    }
    var myImg = new Image();
    var myData;

    function b64toBlob(b64Data, contentType, sliceSize) {
        contentType = contentType || '';
        sliceSize = sliceSize || 512;

        var byteCharacters = atob(b64Data);
        var byteArrays = [];

        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
            var slice = byteCharacters.slice(offset, offset + sliceSize);

            var byteNumbers = new Array(slice.length);
            for (var i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            var byteArray = new Uint8Array(byteNumbers);

            byteArrays.push(byteArray);
        }

        var blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }

    function clickme() {
        var canvasdiv = document.createElement("canvas");
        canvasdiv.setAttribute("id", "myCanvas");
        document.body.append(canvasdiv);
        var c = document.getElementById("myCanvas");
        var ctx = c.getContext("2d");
        var img = new Image();
        img.src = 'https://pbs.twimg.com/profile_images/669912345326526464/QYHcpsdQ_400x400.jpg';
        img.crossOrigin = "Anonymous";
        c.setAttribute("height", "200");
        c.setAttribute("width", "200");
        img.onload = function () {
            ctx.drawImage(img, 0, 0, 200, 200);
        };
        var x = canvasdiv.toDataURL("image/jpeg");
        var base64result = x.split(',')[1];
        var myForm = document.getElementById('myForm');
        var formData = new FormData(myForm);
        for (var pair of formData.entries()) {
            console.log(pair[0] + ', ' + pair[1]);
        }
        var contentType = 'image/png';
        var b64Data = 'iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO9TXL0Y4OHwAAAABJRU5ErkJggg==';
        getURL().then(image => {
            var result = image.split(',')[1];
            var blob = b64toBlob(result, contentType, 512);
            console.log("blob", blob);
            for (var pair of formData.entries()) {
                console.log(pair[0] + ', ' + pair[1]);
            }
            formData.delete("article[image]")
            formData.append("article[image]", blob)

            var request = new XMLHttpRequest();

            request.open("POST", "/articles", true);
            //request.dsetRequestHeader("Content-type", "multipart/form-data");
            request.send(formData);

            request.response
            request.onreadystatechange = function () {//Call a function when the state changes.
                console.log("got something")
                if (request.readyState == XMLHttpRequest.DONE && request.status == 200) {
                    // Request finished. Do processing here.
                    console.log("RESPONSE:", request);
                    window.history.pushState({}, "", request.responseURL);
                    document.body.innerHTML = request.response;
                }
            }
        });

    }

</script>